{'year': 2024, 'semester': 'Fall', 'courseID': '022117', 'department': 'CSCI', 'number': 104, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 1165, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Unavailable', 'classType': 'Lecture', 'titleLong': 'Data Science And Computing For All', 'titleShort': 'Data Science And Computing', 'instructors': [{'id': 2346, 'name': 'Stephen N. Freund'}], 'meetings': [{'days': 'MWF', 'start': '10:00', 'end': '10:50', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Weekly lab assignments involving programming, a project, and examinations.', 'extraInfo': '', 'prereqs': 'None; previous programming experience or statistics is not required.', 'departmentNotes': 'Additional details about the class are available here: https://www.cs.williams.edu/~cs104. Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/', 'descriptionSearch': "Many of the world's greatest discoveries and most consequential decisions are enabled or informed by the analysis of data from a myriad of sources. Indeed, the ability to wrangle, visualize, and draw conclusions from data is now a critical tool in the sciences, business, medicine, politics, other academic disciplines, and society as a whole. This course lays the foundations for quantifying relationships in data by exploring complementary computational, statistical, and visualization concepts. These concepts will be reinforced by lab experiences designed to teach programming and statistics skills while analyzing real-world data sets. This course will also examine the broader context and social issues surrounding data analysis, including privacy and ethics.", 'enrolmentPreferences': 'Not open to those who have completed or are currently enrolled in a Computer Science course numbered 136 or higher. Preference given to those who have not previously taken a computer science or statistics course.', 'crossListing': ['CSCI 104'], 'components': ['Laboratory', 'Lecture']}
{'year': 2024, 'semester': 'Fall', 'courseID': '022117', 'department': 'CSCI', 'number': 104, 'section': '02', 'sectionType': 'in-person', 'peoplesoftNumber': 1166, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Unavailable', 'classType': 'Lecture', 'titleLong': 'Data Science And Computing For All', 'titleShort': 'Data Science And Computing', 'instructors': [{'id': 13522, 'name': 'Katie A. Keith'}], 'meetings': [{'days': 'MWF', 'start': '11:00', 'end': '11:50', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Weekly lab assignments involving programming, a project, and examinations.', 'extraInfo': '', 'prereqs': 'None; previous programming experience or statistics is not required.', 'departmentNotes': 'Additional details about the class are available here: https://www.cs.williams.edu/~cs104. Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/', 'descriptionSearch': "Many of the world's greatest discoveries and most consequential decisions are enabled or informed by the analysis of data from a myriad of sources. Indeed, the ability to wrangle, visualize, and draw conclusions from data is now a critical tool in the sciences, business, medicine, politics, other academic disciplines, and society as a whole. This course lays the foundations for quantifying relationships in data by exploring complementary computational, statistical, and visualization concepts. These concepts will be reinforced by lab experiences designed to teach programming and statistics skills while analyzing real-world data sets. This course will also examine the broader context and social issues surrounding data analysis, including privacy and ethics.", 'enrolmentPreferences': 'Not open to those who have completed or are currently enrolled in a Computer Science course numbered 136 or higher. Preference given to those who have not previously taken a computer science or statistics course.', 'crossListing': ['CSCI 104'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '022117', 'department': 'CSCI', 'number': 104, 'section': '03', 'sectionType': 'in-person', 'peoplesoftNumber': 1168, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Unavailable', 'classType': 'Laboratory', 'titleLong': 'Data Science And Computing For All', 'titleShort': 'Data Science And Computing', 'instructors': [{'id': 2346, 'name': 'Stephen N. Freund'}], 'meetings': [{'days': 'M', 'start': '13:00', 'end': '14:30', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Weekly lab assignments involving programming, a project, and examinations.', 'extraInfo': '', 'prereqs': 'None; previous programming experience or statistics is not required.', 'departmentNotes': 'Additional details about the class are available here: https://www.cs.williams.edu/~cs104. Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/', 'descriptionSearch': "Many of the world's greatest discoveries and most consequential decisions are enabled or informed by the analysis of data from a myriad of sources. Indeed, the ability to wrangle, visualize, and draw conclusions from data is now a critical tool in the sciences, business, medicine, politics, other academic disciplines, and society as a whole. This course lays the foundations for quantifying relationships in data by exploring complementary computational, statistical, and visualization concepts. These concepts will be reinforced by lab experiences designed to teach programming and statistics skills while analyzing real-world data sets. This course will also examine the broader context and social issues surrounding data analysis, including privacy and ethics.", 'enrolmentPreferences': 'Not open to those who have completed or are currently enrolled in a Computer Science course numbered 136 or higher. Preference given to those who have not previously taken a computer science or statistics course.', 'crossListing': ['CSCI 104'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '022117', 'department': 'CSCI', 'number': 104, 'section': '04', 'sectionType': 'in-person', 'peoplesoftNumber': 1169, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Unavailable', 'classType': 'Laboratory', 'titleLong': 'Data Science And Computing For All', 'titleShort': 'Data Science And Computing', 'instructors': [{'id': 2346, 'name': 'Stephen N. Freund'}], 'meetings': [{'days': 'M', 'start': '14:30', 'end': '16:00', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Weekly lab assignments involving programming, a project, and examinations.', 'extraInfo': '', 'prereqs': 'None; previous programming experience or statistics is not required.', 'departmentNotes': 'Additional details about the class are available here: https://www.cs.williams.edu/~cs104. Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/', 'descriptionSearch': "Many of the world's greatest discoveries and most consequential decisions are enabled or informed by the analysis of data from a myriad of sources. Indeed, the ability to wrangle, visualize, and draw conclusions from data is now a critical tool in the sciences, business, medicine, politics, other academic disciplines, and society as a whole. This course lays the foundations for quantifying relationships in data by exploring complementary computational, statistical, and visualization concepts. These concepts will be reinforced by lab experiences designed to teach programming and statistics skills while analyzing real-world data sets. This course will also examine the broader context and social issues surrounding data analysis, including privacy and ethics.", 'enrolmentPreferences': 'Not open to those who have completed or are currently enrolled in a Computer Science course numbered 136 or higher. Preference given to those who have not previously taken a computer science or statistics course.', 'crossListing': ['CSCI 104'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '022117', 'department': 'CSCI', 'number': 104, 'section': '05', 'sectionType': 'in-person', 'peoplesoftNumber': 1170, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Unavailable', 'classType': 'Laboratory', 'titleLong': 'Data Science And Computing For All', 'titleShort': 'Data Science And Computing', 'instructors': [{'id': 13522, 'name': 'Katie A. Keith'}], 'meetings': [{'days': 'T', 'start': '13:00', 'end': '14:30', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Weekly lab assignments involving programming, a project, and examinations.', 'extraInfo': '', 'prereqs': 'None; previous programming experience or statistics is not required.', 'departmentNotes': 'Additional details about the class are available here: https://www.cs.williams.edu/~cs104. Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/', 'descriptionSearch': "Many of the world's greatest discoveries and most consequential decisions are enabled or informed by the analysis of data from a myriad of sources. Indeed, the ability to wrangle, visualize, and draw conclusions from data is now a critical tool in the sciences, business, medicine, politics, other academic disciplines, and society as a whole. This course lays the foundations for quantifying relationships in data by exploring complementary computational, statistical, and visualization concepts. These concepts will be reinforced by lab experiences designed to teach programming and statistics skills while analyzing real-world data sets. This course will also examine the broader context and social issues surrounding data analysis, including privacy and ethics.", 'enrolmentPreferences': 'Not open to those who have completed or are currently enrolled in a Computer Science course numbered 136 or higher. Preference given to those who have not previously taken a computer science or statistics course.', 'crossListing': ['CSCI 104'], 'components': ['Laboratory', 'Lecture']}
{'year': 2024, 'semester': 'Fall', 'courseID': '022117', 'department': 'CSCI', 'number': 104, 'section': '06', 'sectionType': 'in-person', 'peoplesoftNumber': 1171, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Unavailable', 'classType': 'Laboratory', 'titleLong': 'Data Science And Computing For All', 'titleShort': 'Data Science And Computing', 'instructors': [{'id': 13522, 'name': 'Katie A. Keith'}], 'meetings': [{'days': 'T', 'start': '14:30', 'end': '16:00', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Weekly lab assignments involving programming, a project, and examinations.', 'extraInfo': '', 'prereqs': 'None; previous programming experience or statistics is not required.', 'departmentNotes': 'Additional details about the class are available here: https://www.cs.williams.edu/~cs104. Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/', 'descriptionSearch': "Many of the world's greatest discoveries and most consequential decisions are enabled or informed by the analysis of data from a myriad of sources. Indeed, the ability to wrangle, visualize, and draw conclusions from data is now a critical tool in the sciences, business, medicine, politics, other academic disciplines, and society as a whole. This course lays the foundations for quantifying relationships in data by exploring complementary computational, statistical, and visualization concepts. These concepts will be reinforced by lab experiences designed to teach programming and statistics skills while analyzing real-world data sets. This course will also examine the broader context and social issues surrounding data analysis, including privacy and ethics.", 'enrolmentPreferences': 'Not open to those who have completed or are currently enrolled in a Computer Science course numbered 136 or higher. Preference given to those who have not previously taken a computer science or statistics course.', 'crossListing': ['CSCI 104'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010801', 'department': 'CSCI', 'number': 134, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 3184, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Lecture', 'titleLong': 'Introduction To Computer Science', 'titleShort': 'Intro To Computer Science', 'instructors': [{'id': 10127, 'name': 'Bill K. Jannen'}], 'meetings': [{'days': 'MWF', 'start': '09:00', 'end': '09:50', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'Weekly programming projects, weekly written homeworks, and two examinations.', 'extraInfo': '', 'prereqs': 'None, except for the standard prerequisites for a (QFR) course; previous programming experience is not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/.  Students with prior experience with object-oriented programming should discuss appropriate course placement with members of the department.', 'descriptionSearch': 'This course introduces students to the science of computation by exploring the representation and manipulation of data and algorithms. We organize and transform information in order to solve problems using algorithms written in a modern object-oriented language. Topics include organization of data using objects and classes, and the description of processes using conditional control, iteration, methods and classes. We also begin the study of abstraction, self-reference, reuse, and performance analysis. While the choice of programming language and application area will vary in different offerings, the skills students develop will transfer equally well to more advanced study in many areas. In particular, this course is designed to provide the programming skills needed for further study in computer science and is expected to satisfy introductory programming requirements in other departments.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 134'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010801', 'department': 'CSCI', 'number': 134, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 1176, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Lecture', 'titleLong': 'Introduction To Computer Science', 'titleShort': 'Intro To Computer Science', 'instructors': [{'id': 13529, 'name': 'Mark Hopkins'}], 'meetings': [{'days': 'MWF', 'start': '09:00', 'end': '09:50', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'Weekly programming projects, weekly written homeworks, and two examinations.', 'extraInfo': '', 'prereqs': 'None, except for the standard prerequisites for a (QFR) course; previous programming experience is not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/.  Students with prior experience with object-oriented programming should discuss appropriate course placement with members of the department.', 'descriptionSearch': 'This course introduces students to the science of computation by exploring the representation and manipulation of data and algorithms. We organize and transform information in order to solve problems using algorithms written in a modern object-oriented language. Topics include organization of data using objects and classes, and the description of processes using conditional control, iteration, methods and classes. We also begin the study of abstraction, self-reference, reuse, and performance analysis. While the choice of programming language and application area will vary in different offerings, the skills students develop will transfer equally well to more advanced study in many areas. In particular, this course is designed to provide the programming skills needed for further study in computer science and is expected to satisfy introductory programming requirements in other departments.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 134'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010801', 'department': 'CSCI', 'number': 134, 'section': '02', 'sectionType': 'in-person', 'peoplesoftNumber': 3185, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Lecture', 'titleLong': 'Introduction To Computer Science', 'titleShort': 'Intro To Computer Science', 'instructors': [{'id': 11195, 'name': 'Shikha Singh'}], 'meetings': [{'days': 'MWF', 'start': '10:00', 'end': '10:50', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'Weekly programming projects, weekly written homeworks, and two examinations.', 'extraInfo': '', 'prereqs': 'None, except for the standard prerequisites for a (QFR) course; previous programming experience is not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/.  Students with prior experience with object-oriented programming should discuss appropriate course placement with members of the department.', 'descriptionSearch': 'This course introduces students to the science of computation by exploring the representation and manipulation of data and algorithms. We organize and transform information in order to solve problems using algorithms written in a modern object-oriented language. Topics include organization of data using objects and classes, and the description of processes using conditional control, iteration, methods and classes. We also begin the study of abstraction, self-reference, reuse, and performance analysis. While the choice of programming language and application area will vary in different offerings, the skills students develop will transfer equally well to more advanced study in many areas. In particular, this course is designed to provide the programming skills needed for further study in computer science and is expected to satisfy introductory programming requirements in other departments.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 134'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010801', 'department': 'CSCI', 'number': 134, 'section': '02', 'sectionType': 'in-person', 'peoplesoftNumber': 1177, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Lecture', 'titleLong': 'Introduction To Computer Science', 'titleShort': 'Intro To Computer Science', 'instructors': [{'id': 9479, 'name': 'Iris Howley'}], 'meetings': [{'days': 'MWF', 'start': '10:00', 'end': '10:50', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'Weekly programming projects, weekly written homeworks, and two examinations.', 'extraInfo': '', 'prereqs': 'None, except for the standard prerequisites for a (QFR) course; previous programming experience is not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/.  Students with prior experience with object-oriented programming should discuss appropriate course placement with members of the department.', 'descriptionSearch': 'This course introduces students to the science of computation by exploring the representation and manipulation of data and algorithms. We organize and transform information in order to solve problems using algorithms written in a modern object-oriented language. Topics include organization of data using objects and classes, and the description of processes using conditional control, iteration, methods and classes. We also begin the study of abstraction, self-reference, reuse, and performance analysis. While the choice of programming language and application area will vary in different offerings, the skills students develop will transfer equally well to more advanced study in many areas. In particular, this course is designed to provide the programming skills needed for further study in computer science and is expected to satisfy introductory programming requirements in other departments.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 134'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010801', 'department': 'CSCI', 'number': 134, 'section': '03', 'sectionType': 'in-person', 'peoplesoftNumber': 3186, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Lecture', 'titleLong': 'Introduction To Computer Science', 'titleShort': 'Intro To Computer Science', 'instructors': [{'id': 11195, 'name': 'Shikha Singh'}], 'meetings': [{'days': 'MWF', 'start': '11:00', 'end': '11:50', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'Weekly programming projects, weekly written homeworks, and two examinations.', 'extraInfo': '', 'prereqs': 'None, except for the standard prerequisites for a (QFR) course; previous programming experience is not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/.  Students with prior experience with object-oriented programming should discuss appropriate course placement with members of the department.', 'descriptionSearch': 'This course introduces students to the science of computation by exploring the representation and manipulation of data and algorithms. We organize and transform information in order to solve problems using algorithms written in a modern object-oriented language. Topics include organization of data using objects and classes, and the description of processes using conditional control, iteration, methods and classes. We also begin the study of abstraction, self-reference, reuse, and performance analysis. While the choice of programming language and application area will vary in different offerings, the skills students develop will transfer equally well to more advanced study in many areas. In particular, this course is designed to provide the programming skills needed for further study in computer science and is expected to satisfy introductory programming requirements in other departments.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 134'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010801', 'department': 'CSCI', 'number': 134, 'section': '03', 'sectionType': 'in-person', 'peoplesoftNumber': 1178, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Lecture', 'titleLong': 'Introduction To Computer Science', 'titleShort': 'Intro To Computer Science', 'instructors': [{'id': 9479, 'name': 'Iris Howley'}], 'meetings': [{'days': 'MWF', 'start': '11:00', 'end': '11:50', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'Weekly programming projects, weekly written homeworks, and two examinations.', 'extraInfo': '', 'prereqs': 'None, except for the standard prerequisites for a (QFR) course; previous programming experience is not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/.  Students with prior experience with object-oriented programming should discuss appropriate course placement with members of the department.', 'descriptionSearch': 'This course introduces students to the science of computation by exploring the representation and manipulation of data and algorithms. We organize and transform information in order to solve problems using algorithms written in a modern object-oriented language. Topics include organization of data using objects and classes, and the description of processes using conditional control, iteration, methods and classes. We also begin the study of abstraction, self-reference, reuse, and performance analysis. While the choice of programming language and application area will vary in different offerings, the skills students develop will transfer equally well to more advanced study in many areas. In particular, this course is designed to provide the programming skills needed for further study in computer science and is expected to satisfy introductory programming requirements in other departments.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 134'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010801', 'department': 'CSCI', 'number': 134, 'section': '04', 'sectionType': 'in-person', 'peoplesoftNumber': 3188, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Laboratory', 'titleLong': 'Introduction To Computer Science', 'titleShort': 'Intro To Computer Science', 'instructors': [{'id': 11195, 'name': 'Shikha Singh'}], 'meetings': [{'days': 'M', 'start': '13:00', 'end': '14:30', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'Weekly programming projects, weekly written homeworks, and two examinations.', 'extraInfo': '', 'prereqs': 'None, except for the standard prerequisites for a (QFR) course; previous programming experience is not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/.  Students with prior experience with object-oriented programming should discuss appropriate course placement with members of the department.', 'descriptionSearch': 'This course introduces students to the science of computation by exploring the representation and manipulation of data and algorithms. We organize and transform information in order to solve problems using algorithms written in a modern object-oriented language. Topics include organization of data using objects and classes, and the description of processes using conditional control, iteration, methods and classes. We also begin the study of abstraction, self-reference, reuse, and performance analysis. While the choice of programming language and application area will vary in different offerings, the skills students develop will transfer equally well to more advanced study in many areas. In particular, this course is designed to provide the programming skills needed for further study in computer science and is expected to satisfy introductory programming requirements in other departments.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 134'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010801', 'department': 'CSCI', 'number': 134, 'section': '04', 'sectionType': 'in-person', 'peoplesoftNumber': 1181, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Laboratory', 'titleLong': 'Introduction To Computer Science', 'titleShort': 'Intro To Computer Science', 'instructors': [{'id': 9479, 'name': 'Iris Howley'}], 'meetings': [{'days': 'M', 'start': '13:00', 'end': '14:30', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'Weekly programming projects, weekly written homeworks, and two examinations.', 'extraInfo': '', 'prereqs': 'None, except for the standard prerequisites for a (QFR) course; previous programming experience is not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/.  Students with prior experience with object-oriented programming should discuss appropriate course placement with members of the department.', 'descriptionSearch': 'This course introduces students to the science of computation by exploring the representation and manipulation of data and algorithms. We organize and transform information in order to solve problems using algorithms written in a modern object-oriented language. Topics include organization of data using objects and classes, and the description of processes using conditional control, iteration, methods and classes. We also begin the study of abstraction, self-reference, reuse, and performance analysis. While the choice of programming language and application area will vary in different offerings, the skills students develop will transfer equally well to more advanced study in many areas. In particular, this course is designed to provide the programming skills needed for further study in computer science and is expected to satisfy introductory programming requirements in other departments.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 134'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010801', 'department': 'CSCI', 'number': 134, 'section': '05', 'sectionType': 'in-person', 'peoplesoftNumber': 3189, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Laboratory', 'titleLong': 'Introduction To Computer Science', 'titleShort': 'Intro To Computer Science', 'instructors': [{'id': 10127, 'name': 'Bill K. Jannen'}], 'meetings': [{'days': 'M', 'start': '13:00', 'end': '14:30', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'Weekly programming projects, weekly written homeworks, and two examinations.', 'extraInfo': '', 'prereqs': 'None, except for the standard prerequisites for a (QFR) course; previous programming experience is not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/.  Students with prior experience with object-oriented programming should discuss appropriate course placement with members of the department.', 'descriptionSearch': 'This course introduces students to the science of computation by exploring the representation and manipulation of data and algorithms. We organize and transform information in order to solve problems using algorithms written in a modern object-oriented language. Topics include organization of data using objects and classes, and the description of processes using conditional control, iteration, methods and classes. We also begin the study of abstraction, self-reference, reuse, and performance analysis. While the choice of programming language and application area will vary in different offerings, the skills students develop will transfer equally well to more advanced study in many areas. In particular, this course is designed to provide the programming skills needed for further study in computer science and is expected to satisfy introductory programming requirements in other departments.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 134'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010801', 'department': 'CSCI', 'number': 134, 'section': '05', 'sectionType': 'in-person', 'peoplesoftNumber': 1182, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Laboratory', 'titleLong': 'Introduction To Computer Science', 'titleShort': 'Intro To Computer Science', 'instructors': [{'id': 13529, 'name': 'Mark Hopkins'}], 'meetings': [{'days': 'M', 'start': '13:00', 'end': '14:30', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'Weekly programming projects, weekly written homeworks, and two examinations.', 'extraInfo': '', 'prereqs': 'None, except for the standard prerequisites for a (QFR) course; previous programming experience is not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/.  Students with prior experience with object-oriented programming should discuss appropriate course placement with members of the department.', 'descriptionSearch': 'This course introduces students to the science of computation by exploring the representation and manipulation of data and algorithms. We organize and transform information in order to solve problems using algorithms written in a modern object-oriented language. Topics include organization of data using objects and classes, and the description of processes using conditional control, iteration, methods and classes. We also begin the study of abstraction, self-reference, reuse, and performance analysis. While the choice of programming language and application area will vary in different offerings, the skills students develop will transfer equally well to more advanced study in many areas. In particular, this course is designed to provide the programming skills needed for further study in computer science and is expected to satisfy introductory programming requirements in other departments.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 134'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010801', 'department': 'CSCI', 'number': 134, 'section': '06', 'sectionType': 'in-person', 'peoplesoftNumber': 1183, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Laboratory', 'titleLong': 'Introduction To Computer Science', 'titleShort': 'Intro To Computer Science', 'instructors': [{'id': 9479, 'name': 'Iris Howley'}], 'meetings': [{'days': 'M', 'start': '14:30', 'end': '16:00', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'Weekly programming projects, weekly written homeworks, and two examinations.', 'extraInfo': '', 'prereqs': 'None, except for the standard prerequisites for a (QFR) course; previous programming experience is not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/.  Students with prior experience with object-oriented programming should discuss appropriate course placement with members of the department.', 'descriptionSearch': 'This course introduces students to the science of computation by exploring the representation and manipulation of data and algorithms. We organize and transform information in order to solve problems using algorithms written in a modern object-oriented language. Topics include organization of data using objects and classes, and the description of processes using conditional control, iteration, methods and classes. We also begin the study of abstraction, self-reference, reuse, and performance analysis. While the choice of programming language and application area will vary in different offerings, the skills students develop will transfer equally well to more advanced study in many areas. In particular, this course is designed to provide the programming skills needed for further study in computer science and is expected to satisfy introductory programming requirements in other departments.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 134'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010801', 'department': 'CSCI', 'number': 134, 'section': '06', 'sectionType': 'in-person', 'peoplesoftNumber': 3190, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Laboratory', 'titleLong': 'Introduction To Computer Science', 'titleShort': 'Intro To Computer Science', 'instructors': [{'id': 11195, 'name': 'Shikha Singh'}], 'meetings': [{'days': 'M', 'start': '14:30', 'end': '16:00', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'Weekly programming projects, weekly written homeworks, and two examinations.', 'extraInfo': '', 'prereqs': 'None, except for the standard prerequisites for a (QFR) course; previous programming experience is not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/.  Students with prior experience with object-oriented programming should discuss appropriate course placement with members of the department.', 'descriptionSearch': 'This course introduces students to the science of computation by exploring the representation and manipulation of data and algorithms. We organize and transform information in order to solve problems using algorithms written in a modern object-oriented language. Topics include organization of data using objects and classes, and the description of processes using conditional control, iteration, methods and classes. We also begin the study of abstraction, self-reference, reuse, and performance analysis. While the choice of programming language and application area will vary in different offerings, the skills students develop will transfer equally well to more advanced study in many areas. In particular, this course is designed to provide the programming skills needed for further study in computer science and is expected to satisfy introductory programming requirements in other departments.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 134'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010801', 'department': 'CSCI', 'number': 134, 'section': '07', 'sectionType': 'in-person', 'peoplesoftNumber': 3191, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Laboratory', 'titleLong': 'Introduction To Computer Science', 'titleShort': 'Intro To Computer Science', 'instructors': [{'id': 11195, 'name': 'Shikha Singh'}], 'meetings': [{'days': 'T', 'start': '13:00', 'end': '14:30', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'Weekly programming projects, weekly written homeworks, and two examinations.', 'extraInfo': '', 'prereqs': 'None, except for the standard prerequisites for a (QFR) course; previous programming experience is not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/.  Students with prior experience with object-oriented programming should discuss appropriate course placement with members of the department.', 'descriptionSearch': 'This course introduces students to the science of computation by exploring the representation and manipulation of data and algorithms. We organize and transform information in order to solve problems using algorithms written in a modern object-oriented language. Topics include organization of data using objects and classes, and the description of processes using conditional control, iteration, methods and classes. We also begin the study of abstraction, self-reference, reuse, and performance analysis. While the choice of programming language and application area will vary in different offerings, the skills students develop will transfer equally well to more advanced study in many areas. In particular, this course is designed to provide the programming skills needed for further study in computer science and is expected to satisfy introductory programming requirements in other departments.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 134'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010801', 'department': 'CSCI', 'number': 134, 'section': '07', 'sectionType': 'in-person', 'peoplesoftNumber': 1184, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Laboratory', 'titleLong': 'Introduction To Computer Science', 'titleShort': 'Intro To Computer Science', 'instructors': [{'id': 9479, 'name': 'Iris Howley'}], 'meetings': [{'days': 'T', 'start': '13:00', 'end': '14:30', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'Weekly programming projects, weekly written homeworks, and two examinations.', 'extraInfo': '', 'prereqs': 'None, except for the standard prerequisites for a (QFR) course; previous programming experience is not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/.  Students with prior experience with object-oriented programming should discuss appropriate course placement with members of the department.', 'descriptionSearch': 'This course introduces students to the science of computation by exploring the representation and manipulation of data and algorithms. We organize and transform information in order to solve problems using algorithms written in a modern object-oriented language. Topics include organization of data using objects and classes, and the description of processes using conditional control, iteration, methods and classes. We also begin the study of abstraction, self-reference, reuse, and performance analysis. While the choice of programming language and application area will vary in different offerings, the skills students develop will transfer equally well to more advanced study in many areas. In particular, this course is designed to provide the programming skills needed for further study in computer science and is expected to satisfy introductory programming requirements in other departments.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 134'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010801', 'department': 'CSCI', 'number': 134, 'section': '08', 'sectionType': 'in-person', 'peoplesoftNumber': 3192, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Laboratory', 'titleLong': 'Introduction To Computer Science', 'titleShort': 'Intro To Computer Science', 'instructors': [{'id': 10127, 'name': 'Bill K. Jannen'}], 'meetings': [{'days': 'T', 'start': '14:30', 'end': '16:00', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'Weekly programming projects, weekly written homeworks, and two examinations.', 'extraInfo': '', 'prereqs': 'None, except for the standard prerequisites for a (QFR) course; previous programming experience is not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/.  Students with prior experience with object-oriented programming should discuss appropriate course placement with members of the department.', 'descriptionSearch': 'This course introduces students to the science of computation by exploring the representation and manipulation of data and algorithms. We organize and transform information in order to solve problems using algorithms written in a modern object-oriented language. Topics include organization of data using objects and classes, and the description of processes using conditional control, iteration, methods and classes. We also begin the study of abstraction, self-reference, reuse, and performance analysis. While the choice of programming language and application area will vary in different offerings, the skills students develop will transfer equally well to more advanced study in many areas. In particular, this course is designed to provide the programming skills needed for further study in computer science and is expected to satisfy introductory programming requirements in other departments.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 134'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010801', 'department': 'CSCI', 'number': 134, 'section': '08', 'sectionType': 'in-person', 'peoplesoftNumber': 1185, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Laboratory', 'titleLong': 'Introduction To Computer Science', 'titleShort': 'Intro To Computer Science', 'instructors': [{'id': 13529, 'name': 'Mark Hopkins'}], 'meetings': [{'days': 'T', 'start': '13:00', 'end': '14:30', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'Weekly programming projects, weekly written homeworks, and two examinations.', 'extraInfo': '', 'prereqs': 'None, except for the standard prerequisites for a (QFR) course; previous programming experience is not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/.  Students with prior experience with object-oriented programming should discuss appropriate course placement with members of the department.', 'descriptionSearch': 'This course introduces students to the science of computation by exploring the representation and manipulation of data and algorithms. We organize and transform information in order to solve problems using algorithms written in a modern object-oriented language. Topics include organization of data using objects and classes, and the description of processes using conditional control, iteration, methods and classes. We also begin the study of abstraction, self-reference, reuse, and performance analysis. While the choice of programming language and application area will vary in different offerings, the skills students develop will transfer equally well to more advanced study in many areas. In particular, this course is designed to provide the programming skills needed for further study in computer science and is expected to satisfy introductory programming requirements in other departments.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 134'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010801', 'department': 'CSCI', 'number': 134, 'section': '09', 'sectionType': 'in-person', 'peoplesoftNumber': 3193, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Laboratory', 'titleLong': 'Introduction To Computer Science', 'titleShort': 'Intro To Computer Science', 'instructors': [{'id': 11195, 'name': 'Shikha Singh'}], 'meetings': [{'days': 'T', 'start': '14:30', 'end': '16:00', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'Weekly programming projects, weekly written homeworks, and two examinations.', 'extraInfo': '', 'prereqs': 'None, except for the standard prerequisites for a (QFR) course; previous programming experience is not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/.  Students with prior experience with object-oriented programming should discuss appropriate course placement with members of the department.', 'descriptionSearch': 'This course introduces students to the science of computation by exploring the representation and manipulation of data and algorithms. We organize and transform information in order to solve problems using algorithms written in a modern object-oriented language. Topics include organization of data using objects and classes, and the description of processes using conditional control, iteration, methods and classes. We also begin the study of abstraction, self-reference, reuse, and performance analysis. While the choice of programming language and application area will vary in different offerings, the skills students develop will transfer equally well to more advanced study in many areas. In particular, this course is designed to provide the programming skills needed for further study in computer science and is expected to satisfy introductory programming requirements in other departments.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 134'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010801', 'department': 'CSCI', 'number': 134, 'section': '09', 'sectionType': 'in-person', 'peoplesoftNumber': 1186, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Laboratory', 'titleLong': 'Introduction To Computer Science', 'titleShort': 'Intro To Computer Science', 'instructors': [{'id': 9479, 'name': 'Iris Howley'}], 'meetings': [{'days': 'T', 'start': '14:30', 'end': '16:00', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'Weekly programming projects, weekly written homeworks, and two examinations.', 'extraInfo': '', 'prereqs': 'None, except for the standard prerequisites for a (QFR) course; previous programming experience is not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/.  Students with prior experience with object-oriented programming should discuss appropriate course placement with members of the department.', 'descriptionSearch': 'This course introduces students to the science of computation by exploring the representation and manipulation of data and algorithms. We organize and transform information in order to solve problems using algorithms written in a modern object-oriented language. Topics include organization of data using objects and classes, and the description of processes using conditional control, iteration, methods and classes. We also begin the study of abstraction, self-reference, reuse, and performance analysis. While the choice of programming language and application area will vary in different offerings, the skills students develop will transfer equally well to more advanced study in many areas. In particular, this course is designed to provide the programming skills needed for further study in computer science and is expected to satisfy introductory programming requirements in other departments.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 134'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010803', 'department': 'CSCI', 'number': 136, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 3194, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Unavailable', 'classType': 'Lecture', 'titleLong': 'Data Structures And Advanced Programming', 'titleShort': 'Data Strctures & Advanced Prog', 'instructors': [{'id': 13522, 'name': 'Katie A. Keith'}], 'meetings': [{'days': 'MWF', 'start': '09:00', 'end': '09:50', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Programming and written assignments, quizzes, examinations', 'extraInfo': '', 'prereqs': 'CSCI 134 or equivalent; fulfilling the Discrete Mathematics Proficiency requirement is recommended, but not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/', 'descriptionSearch': 'This course builds on the programming skills acquired in Computer Science 134. It couples work on program design, analysis, and verification with an introduction to the study of data structures. Data structures capture common ways in which to store and manipulate data, and they are important in the construction of sophisticated computer programs. Students are introduced to some of the most important and frequently used data structures: lists, stacks, queues, trees, hash tables, graphs, and files. Students will be expected to write several programs, ranging from very short programs to more elaborate systems. Emphasis will be placed on the development of clear, modular programs that are easy to read, debug, verify, analyze, and modify.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 136'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010803', 'department': 'CSCI', 'number': 136, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 1187, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Unavailable', 'classType': 'Lecture', 'titleLong': 'Data Structures And Advanced Programming', 'titleShort': 'Data Strctures & Advanced Prog', 'instructors': [{'id': 13530, 'name': 'James M. Bern'}], 'meetings': [{'days': 'MWF', 'start': '09:00', 'end': '09:50', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Programming and written assignments, quizzes, examinations', 'extraInfo': '', 'prereqs': 'CSCI 134 or equivalent; fulfilling the Discrete Mathematics Proficiency requirement is recommended, but not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/', 'descriptionSearch': 'This course builds on the programming skills acquired in Computer Science 134. It couples work on program design, analysis, and verification with an introduction to the study of data structures. Data structures capture common ways in which to store and manipulate data, and they are important in the construction of sophisticated computer programs. Students are introduced to some of the most important and frequently used data structures: lists, stacks, queues, trees, hash tables, graphs, and files. Students will be expected to write several programs, ranging from very short programs to more elaborate systems. Emphasis will be placed on the development of clear, modular programs that are easy to read, debug, verify, analyze, and modify.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 136'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010803', 'department': 'CSCI', 'number': 136, 'section': '02', 'sectionType': 'in-person', 'peoplesoftNumber': 1188, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Unavailable', 'classType': 'Lecture', 'titleLong': 'Data Structures And Advanced Programming', 'titleShort': 'Data Strctures & Advanced Prog', 'instructors': [{'id': 13530, 'name': 'James M. Bern'}], 'meetings': [{'days': 'MWF', 'start': '10:00', 'end': '10:50', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Programming and written assignments, quizzes, examinations', 'extraInfo': '', 'prereqs': 'CSCI 134 or equivalent; fulfilling the Discrete Mathematics Proficiency requirement is recommended, but not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/', 'descriptionSearch': 'This course builds on the programming skills acquired in Computer Science 134. It couples work on program design, analysis, and verification with an introduction to the study of data structures. Data structures capture common ways in which to store and manipulate data, and they are important in the construction of sophisticated computer programs. Students are introduced to some of the most important and frequently used data structures: lists, stacks, queues, trees, hash tables, graphs, and files. Students will be expected to write several programs, ranging from very short programs to more elaborate systems. Emphasis will be placed on the development of clear, modular programs that are easy to read, debug, verify, analyze, and modify.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 136'], 'components': ['Laboratory', 'Lecture']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010803', 'department': 'CSCI', 'number': 136, 'section': '02', 'sectionType': 'in-person', 'peoplesoftNumber': 3195, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Unavailable', 'classType': 'Lecture', 'titleLong': 'Data Structures And Advanced Programming', 'titleShort': 'Data Strctures & Advanced Prog', 'instructors': [{'id': 13522, 'name': 'Katie A. Keith'}], 'meetings': [{'days': 'MWF', 'start': '10:00', 'end': '10:50', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Programming and written assignments, quizzes, examinations', 'extraInfo': '', 'prereqs': 'CSCI 134 or equivalent; fulfilling the Discrete Mathematics Proficiency requirement is recommended, but not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/', 'descriptionSearch': 'This course builds on the programming skills acquired in Computer Science 134. It couples work on program design, analysis, and verification with an introduction to the study of data structures. Data structures capture common ways in which to store and manipulate data, and they are important in the construction of sophisticated computer programs. Students are introduced to some of the most important and frequently used data structures: lists, stacks, queues, trees, hash tables, graphs, and files. Students will be expected to write several programs, ranging from very short programs to more elaborate systems. Emphasis will be placed on the development of clear, modular programs that are easy to read, debug, verify, analyze, and modify.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 136'], 'components': ['Laboratory', 'Lecture']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010803', 'department': 'CSCI', 'number': 136, 'section': '03', 'sectionType': 'in-person', 'peoplesoftNumber': 3196, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Unavailable', 'classType': 'Laboratory', 'titleLong': 'Data Structures And Advanced Programming', 'titleShort': 'Data Strctures & Advanced Prog', 'instructors': [{'id': 13522, 'name': 'Katie A. Keith'}], 'meetings': [{'days': 'W', 'start': '13:00', 'end': '14:30', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Programming and written assignments, quizzes, examinations', 'extraInfo': '', 'prereqs': 'CSCI 134 or equivalent; fulfilling the Discrete Mathematics Proficiency requirement is recommended, but not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/', 'descriptionSearch': 'This course builds on the programming skills acquired in Computer Science 134. It couples work on program design, analysis, and verification with an introduction to the study of data structures. Data structures capture common ways in which to store and manipulate data, and they are important in the construction of sophisticated computer programs. Students are introduced to some of the most important and frequently used data structures: lists, stacks, queues, trees, hash tables, graphs, and files. Students will be expected to write several programs, ranging from very short programs to more elaborate systems. Emphasis will be placed on the development of clear, modular programs that are easy to read, debug, verify, analyze, and modify.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 136'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010803', 'department': 'CSCI', 'number': 136, 'section': '03', 'sectionType': 'in-person', 'peoplesoftNumber': 1189, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Unavailable', 'classType': 'Laboratory', 'titleLong': 'Data Structures And Advanced Programming', 'titleShort': 'Data Strctures & Advanced Prog', 'instructors': [{'id': 13530, 'name': 'James M. Bern'}], 'meetings': [{'days': 'W', 'start': '13:00', 'end': '14:30', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Programming and written assignments, quizzes, examinations', 'extraInfo': '', 'prereqs': 'CSCI 134 or equivalent; fulfilling the Discrete Mathematics Proficiency requirement is recommended, but not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/', 'descriptionSearch': 'This course builds on the programming skills acquired in Computer Science 134. It couples work on program design, analysis, and verification with an introduction to the study of data structures. Data structures capture common ways in which to store and manipulate data, and they are important in the construction of sophisticated computer programs. Students are introduced to some of the most important and frequently used data structures: lists, stacks, queues, trees, hash tables, graphs, and files. Students will be expected to write several programs, ranging from very short programs to more elaborate systems. Emphasis will be placed on the development of clear, modular programs that are easy to read, debug, verify, analyze, and modify.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 136'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010803', 'department': 'CSCI', 'number': 136, 'section': '04', 'sectionType': 'in-person', 'peoplesoftNumber': 1190, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Unavailable', 'classType': 'Laboratory', 'titleLong': 'Data Structures And Advanced Programming', 'titleShort': 'Data Strctures & Advanced Prog', 'instructors': [{'id': 13530, 'name': 'James M. Bern'}], 'meetings': [{'days': 'W', 'start': '14:30', 'end': '16:00', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Programming and written assignments, quizzes, examinations', 'extraInfo': '', 'prereqs': 'CSCI 134 or equivalent; fulfilling the Discrete Mathematics Proficiency requirement is recommended, but not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/', 'descriptionSearch': 'This course builds on the programming skills acquired in Computer Science 134. It couples work on program design, analysis, and verification with an introduction to the study of data structures. Data structures capture common ways in which to store and manipulate data, and they are important in the construction of sophisticated computer programs. Students are introduced to some of the most important and frequently used data structures: lists, stacks, queues, trees, hash tables, graphs, and files. Students will be expected to write several programs, ranging from very short programs to more elaborate systems. Emphasis will be placed on the development of clear, modular programs that are easy to read, debug, verify, analyze, and modify.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 136'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010803', 'department': 'CSCI', 'number': 136, 'section': '04', 'sectionType': 'in-person', 'peoplesoftNumber': 3197, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Unavailable', 'classType': 'Laboratory', 'titleLong': 'Data Structures And Advanced Programming', 'titleShort': 'Data Strctures & Advanced Prog', 'instructors': [{'id': 13522, 'name': 'Katie A. Keith'}], 'meetings': [{'days': 'W', 'start': '14:30', 'end': '16:00', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Programming and written assignments, quizzes, examinations', 'extraInfo': '', 'prereqs': 'CSCI 134 or equivalent; fulfilling the Discrete Mathematics Proficiency requirement is recommended, but not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/', 'descriptionSearch': 'This course builds on the programming skills acquired in Computer Science 134. It couples work on program design, analysis, and verification with an introduction to the study of data structures. Data structures capture common ways in which to store and manipulate data, and they are important in the construction of sophisticated computer programs. Students are introduced to some of the most important and frequently used data structures: lists, stacks, queues, trees, hash tables, graphs, and files. Students will be expected to write several programs, ranging from very short programs to more elaborate systems. Emphasis will be placed on the development of clear, modular programs that are easy to read, debug, verify, analyze, and modify.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 136'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010803', 'department': 'CSCI', 'number': 136, 'section': '05', 'sectionType': 'in-person', 'peoplesoftNumber': 1191, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Unavailable', 'classType': 'Laboratory', 'titleLong': 'Data Structures And Advanced Programming', 'titleShort': 'Data Strctures & Advanced Prog', 'instructors': [{'id': 13530, 'name': 'James M. Bern'}], 'meetings': [{'days': 'R', 'start': '13:00', 'end': '14:30', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Programming and written assignments, quizzes, examinations', 'extraInfo': '', 'prereqs': 'CSCI 134 or equivalent; fulfilling the Discrete Mathematics Proficiency requirement is recommended, but not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/', 'descriptionSearch': 'This course builds on the programming skills acquired in Computer Science 134. It couples work on program design, analysis, and verification with an introduction to the study of data structures. Data structures capture common ways in which to store and manipulate data, and they are important in the construction of sophisticated computer programs. Students are introduced to some of the most important and frequently used data structures: lists, stacks, queues, trees, hash tables, graphs, and files. Students will be expected to write several programs, ranging from very short programs to more elaborate systems. Emphasis will be placed on the development of clear, modular programs that are easy to read, debug, verify, analyze, and modify.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 136'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010803', 'department': 'CSCI', 'number': 136, 'section': '05', 'sectionType': 'in-person', 'peoplesoftNumber': 3198, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Unavailable', 'classType': 'Laboratory', 'titleLong': 'Data Structures And Advanced Programming', 'titleShort': 'Data Strctures & Advanced Prog', 'instructors': [{'id': 13522, 'name': 'Katie A. Keith'}], 'meetings': [{'days': 'R', 'start': '13:00', 'end': '14:30', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Programming and written assignments, quizzes, examinations', 'extraInfo': '', 'prereqs': 'CSCI 134 or equivalent; fulfilling the Discrete Mathematics Proficiency requirement is recommended, but not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/', 'descriptionSearch': 'This course builds on the programming skills acquired in Computer Science 134. It couples work on program design, analysis, and verification with an introduction to the study of data structures. Data structures capture common ways in which to store and manipulate data, and they are important in the construction of sophisticated computer programs. Students are introduced to some of the most important and frequently used data structures: lists, stacks, queues, trees, hash tables, graphs, and files. Students will be expected to write several programs, ranging from very short programs to more elaborate systems. Emphasis will be placed on the development of clear, modular programs that are easy to read, debug, verify, analyze, and modify.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 136'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010803', 'department': 'CSCI', 'number': 136, 'section': '06', 'sectionType': 'in-person', 'peoplesoftNumber': 3199, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Unavailable', 'classType': 'Laboratory', 'titleLong': 'Data Structures And Advanced Programming', 'titleShort': 'Data Strctures & Advanced Prog', 'instructors': [{'id': 13522, 'name': 'Katie A. Keith'}], 'meetings': [{'days': 'R', 'start': '14:30', 'end': '16:00', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Programming and written assignments, quizzes, examinations', 'extraInfo': '', 'prereqs': 'CSCI 134 or equivalent; fulfilling the Discrete Mathematics Proficiency requirement is recommended, but not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/', 'descriptionSearch': 'This course builds on the programming skills acquired in Computer Science 134. It couples work on program design, analysis, and verification with an introduction to the study of data structures. Data structures capture common ways in which to store and manipulate data, and they are important in the construction of sophisticated computer programs. Students are introduced to some of the most important and frequently used data structures: lists, stacks, queues, trees, hash tables, graphs, and files. Students will be expected to write several programs, ranging from very short programs to more elaborate systems. Emphasis will be placed on the development of clear, modular programs that are easy to read, debug, verify, analyze, and modify.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 136'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010803', 'department': 'CSCI', 'number': 136, 'section': '06', 'sectionType': 'in-person', 'peoplesoftNumber': 1192, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Unavailable', 'classType': 'Laboratory', 'titleLong': 'Data Structures And Advanced Programming', 'titleShort': 'Data Strctures & Advanced Prog', 'instructors': [{'id': 13530, 'name': 'James M. Bern'}], 'meetings': [{'days': 'R', 'start': '14:30', 'end': '16:00', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Programming and written assignments, quizzes, examinations', 'extraInfo': '', 'prereqs': 'CSCI 134 or equivalent; fulfilling the Discrete Mathematics Proficiency requirement is recommended, but not required', 'departmentNotes': 'Please see the Computer Science Department website for more information on selecting an introductory computer science class: https://csci.williams.edu/', 'descriptionSearch': 'This course builds on the programming skills acquired in Computer Science 134. It couples work on program design, analysis, and verification with an introduction to the study of data structures. Data structures capture common ways in which to store and manipulate data, and they are important in the construction of sophisticated computer programs. Students are introduced to some of the most important and frequently used data structures: lists, stacks, queues, trees, hash tables, graphs, and files. Students will be expected to write several programs, ranging from very short programs to more elaborate systems. Emphasis will be placed on the development of clear, modular programs that are easy to read, debug, verify, analyze, and modify.', 'enrolmentPreferences': 'If the course is over-enrolled, enrollment will be determined by lottery.', 'crossListing': ['CSCI 136'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010805', 'department': 'CSCI', 'number': 237, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 1193, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Lecture', 'titleLong': 'Computer Organization', 'titleShort': 'Computer Organization', 'instructors': [{'id': 10127, 'name': 'Bill K. Jannen'}], 'meetings': [{'days': 'MWF', 'start': '09:00', 'end': '09:50', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Weekly programming assignments and/or problem sets, quizzes, midterm and final exams', 'extraInfo': '', 'prereqs': 'CSCI 136', 'departmentNotes': '', 'descriptionSearch': "This course studies the basic instruction set architecture and organization of a modern computer. It provides a programmer's view of how computer systems execute programs, store information, and communicate. Over the semester the student learns the fundamentals of translating higher level languages into assembly language, and the interpretation of machine languages by hardware. At the same time, a model of computer hardware organization is developed from the gate level upward.", 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 237'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010805', 'department': 'CSCI', 'number': 237, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 3200, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Lecture', 'titleLong': 'Computer Organization', 'titleShort': 'Computer Organization', 'instructors': [{'id': 2682, 'name': 'Jeannie R Albrecht'}], 'meetings': [{'days': 'MWF', 'start': '12:00', 'end': '12:50', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Weekly programming assignments and/or problem sets, quizzes, midterm and final exams', 'extraInfo': '', 'prereqs': 'CSCI 136', 'departmentNotes': '', 'descriptionSearch': "This course studies the basic instruction set architecture and organization of a modern computer. It provides a programmer's view of how computer systems execute programs, store information, and communicate. Over the semester the student learns the fundamentals of translating higher level languages into assembly language, and the interpretation of machine languages by hardware. At the same time, a model of computer hardware organization is developed from the gate level upward.", 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 237'], 'components': ['Laboratory', 'Lecture']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010805', 'department': 'CSCI', 'number': 237, 'section': '02', 'sectionType': 'in-person', 'peoplesoftNumber': 3201, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Laboratory', 'titleLong': 'Computer Organization', 'titleShort': 'Computer Organization', 'instructors': [{'id': 2682, 'name': 'Jeannie R Albrecht'}], 'meetings': [{'days': 'W', 'start': '13:00', 'end': '14:30', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Weekly programming assignments and/or problem sets, quizzes, midterm and final exams', 'extraInfo': '', 'prereqs': 'CSCI 136', 'departmentNotes': '', 'descriptionSearch': "This course studies the basic instruction set architecture and organization of a modern computer. It provides a programmer's view of how computer systems execute programs, store information, and communicate. Over the semester the student learns the fundamentals of translating higher level languages into assembly language, and the interpretation of machine languages by hardware. At the same time, a model of computer hardware organization is developed from the gate level upward.", 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 237'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010805', 'department': 'CSCI', 'number': 237, 'section': '02', 'sectionType': 'in-person', 'peoplesoftNumber': 1194, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Lecture', 'titleLong': 'Computer Organization', 'titleShort': 'Computer Organization', 'instructors': [{'id': 10127, 'name': 'Bill K. Jannen'}], 'meetings': [{'days': 'MWF', 'start': '11:00', 'end': '11:50', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Weekly programming assignments and/or problem sets, quizzes, midterm and final exams', 'extraInfo': '', 'prereqs': 'CSCI 136', 'departmentNotes': '', 'descriptionSearch': "This course studies the basic instruction set architecture and organization of a modern computer. It provides a programmer's view of how computer systems execute programs, store information, and communicate. Over the semester the student learns the fundamentals of translating higher level languages into assembly language, and the interpretation of machine languages by hardware. At the same time, a model of computer hardware organization is developed from the gate level upward.", 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 237'], 'components': ['Laboratory', 'Lecture']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010805', 'department': 'CSCI', 'number': 237, 'section': '03', 'sectionType': 'in-person', 'peoplesoftNumber': 3202, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Laboratory', 'titleLong': 'Computer Organization', 'titleShort': 'Computer Organization', 'instructors': [{'id': 2682, 'name': 'Jeannie R Albrecht'}], 'meetings': [{'days': 'R', 'start': '13:00', 'end': '14:30', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Weekly programming assignments and/or problem sets, quizzes, midterm and final exams', 'extraInfo': '', 'prereqs': 'CSCI 136', 'departmentNotes': '', 'descriptionSearch': "This course studies the basic instruction set architecture and organization of a modern computer. It provides a programmer's view of how computer systems execute programs, store information, and communicate. Over the semester the student learns the fundamentals of translating higher level languages into assembly language, and the interpretation of machine languages by hardware. At the same time, a model of computer hardware organization is developed from the gate level upward.", 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 237'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010805', 'department': 'CSCI', 'number': 237, 'section': '03', 'sectionType': 'in-person', 'peoplesoftNumber': 1195, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Laboratory', 'titleLong': 'Computer Organization', 'titleShort': 'Computer Organization', 'instructors': [{'id': 10127, 'name': 'Bill K. Jannen'}], 'meetings': [{'days': 'W', 'start': '13:00', 'end': '14:30', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Weekly programming assignments and/or problem sets, quizzes, midterm and final exams', 'extraInfo': '', 'prereqs': 'CSCI 136', 'departmentNotes': '', 'descriptionSearch': "This course studies the basic instruction set architecture and organization of a modern computer. It provides a programmer's view of how computer systems execute programs, store information, and communicate. Over the semester the student learns the fundamentals of translating higher level languages into assembly language, and the interpretation of machine languages by hardware. At the same time, a model of computer hardware organization is developed from the gate level upward.", 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 237'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010805', 'department': 'CSCI', 'number': 237, 'section': '04', 'sectionType': 'in-person', 'peoplesoftNumber': 1196, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Laboratory', 'titleLong': 'Computer Organization', 'titleShort': 'Computer Organization', 'instructors': [{'id': 10127, 'name': 'Bill K. Jannen'}], 'meetings': [{'days': 'W', 'start': '14:30', 'end': '16:00', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Weekly programming assignments and/or problem sets, quizzes, midterm and final exams', 'extraInfo': '', 'prereqs': 'CSCI 136', 'departmentNotes': '', 'descriptionSearch': "This course studies the basic instruction set architecture and organization of a modern computer. It provides a programmer's view of how computer systems execute programs, store information, and communicate. Over the semester the student learns the fundamentals of translating higher level languages into assembly language, and the interpretation of machine languages by hardware. At the same time, a model of computer hardware organization is developed from the gate level upward.", 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 237'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010805', 'department': 'CSCI', 'number': 237, 'section': '05', 'sectionType': 'in-person', 'peoplesoftNumber': 1197, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Laboratory', 'titleLong': 'Computer Organization', 'titleShort': 'Computer Organization', 'instructors': [{'id': 10127, 'name': 'Bill K. Jannen'}], 'meetings': [{'days': 'R', 'start': '13:00', 'end': '14:30', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Weekly programming assignments and/or problem sets, quizzes, midterm and final exams', 'extraInfo': '', 'prereqs': 'CSCI 136', 'departmentNotes': '', 'descriptionSearch': "This course studies the basic instruction set architecture and organization of a modern computer. It provides a programmer's view of how computer systems execute programs, store information, and communicate. Over the semester the student learns the fundamentals of translating higher level languages into assembly language, and the interpretation of machine languages by hardware. At the same time, a model of computer hardware organization is developed from the gate level upward.", 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 237'], 'components': ['Laboratory', 'Lecture']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010805', 'department': 'CSCI', 'number': 237, 'section': '06', 'sectionType': 'in-person', 'peoplesoftNumber': 1198, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Laboratory', 'titleLong': 'Computer Organization', 'titleShort': 'Computer Organization', 'instructors': [{'id': 10127, 'name': 'Bill K. Jannen'}], 'meetings': [{'days': 'R', 'start': '14:30', 'end': '16:00', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Weekly programming assignments and/or problem sets, quizzes, midterm and final exams', 'extraInfo': '', 'prereqs': 'CSCI 136', 'departmentNotes': '', 'descriptionSearch': "This course studies the basic instruction set architecture and organization of a modern computer. It provides a programmer's view of how computer systems execute programs, store information, and communicate. Over the semester the student learns the fundamentals of translating higher level languages into assembly language, and the interpretation of machine languages by hardware. At the same time, a model of computer hardware organization is developed from the gate level upward.", 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 237'], 'components': ['Laboratory', 'Lecture']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010806', 'department': 'CSCI', 'number': 256, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 1199, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Lecture', 'titleLong': 'Algorithm Design And Analysis', 'titleShort': 'Algorithm Design & Analysis', 'instructors': [{'id': 11181, 'name': 'Aaron M. Williams'}], 'meetings': [{'days': 'MWF', 'start': '12:00', 'end': '12:50', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Problem sets, midterm and final examinations', 'extraInfo': '', 'prereqs': 'CSCI 136 and fulfillment of the Discrete Mathematics Proficiency requirement', 'departmentNotes': '', 'descriptionSearch': 'This course investigates methods for designing efficient and reliable algorithms. By carefully analyzing the structure of a problem within a mathematical framework, it is often possible to dramatically decrease the computational resources needed to find a solution. In addition, analysis provides a method for verifying the correctness of an algorithm and accurately estimating its running time and space requirements. We will study several algorithm design strategies that build on data structures and programming techniques introduced in Computer Science 136. These include greedy, divide-and-conquer, dynamic programming, and network flow algorithms. Additional topics of study include algorithms on graphs and strategies for handling potentially intractable problems.', 'enrolmentPreferences': 'Preference will be given to students who need the class in order to complete the major.  Ties will be broken by seniority (seniors first, then juniors, etc.).', 'crossListing': ['CSCI 256'], 'components': ['Lecture']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010806', 'department': 'CSCI', 'number': 256, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 3203, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Lecture', 'titleLong': 'Algorithm Design And Analysis', 'titleShort': 'Algorithm Design & Analysis', 'instructors': [{'id': 11194, 'name': 'Samuel McCauley'}], 'meetings': [{'days': 'MR', 'start': '13:10', 'end': '14:25', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Problem sets, midterm and final examinations', 'extraInfo': '', 'prereqs': 'CSCI 136 and fulfillment of the Discrete Mathematics Proficiency requirement', 'departmentNotes': '', 'descriptionSearch': 'This course investigates methods for designing efficient and reliable algorithms. By carefully analyzing the structure of a problem within a mathematical framework, it is often possible to dramatically decrease the computational resources needed to find a solution. In addition, analysis provides a method for verifying the correctness of an algorithm and accurately estimating its running time and space requirements. We will study several algorithm design strategies that build on data structures and programming techniques introduced in Computer Science 136. These include greedy, divide-and-conquer, dynamic programming, and network flow algorithms. Additional topics of study include algorithms on graphs and strategies for handling potentially intractable problems.', 'enrolmentPreferences': 'Preference will be given to students who need the class in order to complete the major.  Ties will be broken by seniority (seniors first, then juniors, etc.).', 'crossListing': ['CSCI 256'], 'components': ['Lecture']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010806', 'department': 'CSCI', 'number': 256, 'section': '02', 'sectionType': 'in-person', 'peoplesoftNumber': 3204, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Lecture', 'titleLong': 'Algorithm Design And Analysis', 'titleShort': 'Algorithm Design & Analysis', 'instructors': [{'id': 11194, 'name': 'Samuel McCauley'}], 'meetings': [{'days': 'MR', 'start': '14:35', 'end': '15:50', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Problem sets, midterm and final examinations', 'extraInfo': '', 'prereqs': 'CSCI 136 and fulfillment of the Discrete Mathematics Proficiency requirement', 'departmentNotes': '', 'descriptionSearch': 'This course investigates methods for designing efficient and reliable algorithms. By carefully analyzing the structure of a problem within a mathematical framework, it is often possible to dramatically decrease the computational resources needed to find a solution. In addition, analysis provides a method for verifying the correctness of an algorithm and accurately estimating its running time and space requirements. We will study several algorithm design strategies that build on data structures and programming techniques introduced in Computer Science 136. These include greedy, divide-and-conquer, dynamic programming, and network flow algorithms. Additional topics of study include algorithms on graphs and strategies for handling potentially intractable problems.', 'enrolmentPreferences': 'Preference will be given to students who need the class in order to complete the major.  Ties will be broken by seniority (seniors first, then juniors, etc.).', 'crossListing': ['CSCI 256'], 'components': ['Lecture']}
{'year': 2024, 'semester': 'Fall', 'courseID': '020794', 'department': 'CSCI', 'number': 331, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 1200, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Lecture', 'titleLong': 'Introduction To Computer Security', 'titleShort': 'Intro To Computer Security', 'instructors': [{'id': 9487, 'name': 'Daniel W. Barowy'}], 'meetings': [{'days': 'MR', 'start': '14:35', 'end': '15:50', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': 'This Course Has Twice-Weekly Lecture Meetings As Well As A Weekly Lab Meeting.', 'classReqEval': 'Weekly reading responses, lab assignments, midterm exam, and final project', 'extraInfo': '', 'prereqs': 'CSCI 237', 'departmentNotes': '', 'descriptionSearch': 'This class explores common vulnerabilities in computer systems, how attackers exploit them, and how systems engineers design defenses to mitigate them. The goal is to be able to recognize potential vulnerabilities in one\'s own software and to practice defensive design. Hands-on experience writing assembly language and C code to inspect and modify the low-level operation of running programs is emphasized. Finally, regular reading and writing assignments round out the course to help students understand the cultural and historical background of the computer security "arms race."', 'enrolmentPreferences': 'Upper-level students', 'crossListing': ['CSCI 331'], 'components': ['Laboratory', 'Lecture']}
{'year': 2024, 'semester': 'Fall', 'courseID': '020794', 'department': 'CSCI', 'number': 331, 'section': '02', 'sectionType': 'in-person', 'peoplesoftNumber': 1201, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Laboratory', 'titleLong': 'Introduction To Computer Security', 'titleShort': 'Intro To Computer Security', 'instructors': [{'id': 9487, 'name': 'Daniel W. Barowy'}], 'meetings': [{'days': 'T', 'start': '13:00', 'end': '14:30', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': 'This Course Has Twice-Weekly Lecture Meetings As Well As A Weekly Lab Meeting.', 'classReqEval': 'Weekly reading responses, lab assignments, midterm exam, and final project', 'extraInfo': '', 'prereqs': 'CSCI 237', 'departmentNotes': '', 'descriptionSearch': 'This class explores common vulnerabilities in computer systems, how attackers exploit them, and how systems engineers design defenses to mitigate them. The goal is to be able to recognize potential vulnerabilities in one\'s own software and to practice defensive design. Hands-on experience writing assembly language and C code to inspect and modify the low-level operation of running programs is emphasized. Finally, regular reading and writing assignments round out the course to help students understand the cultural and historical background of the computer security "arms race."', 'enrolmentPreferences': 'Upper-level students', 'crossListing': ['CSCI 331'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Fall', 'courseID': '020794', 'department': 'CSCI', 'number': 331, 'section': '03', 'sectionType': 'in-person', 'peoplesoftNumber': 1202, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Laboratory', 'titleLong': 'Introduction To Computer Security', 'titleShort': 'Intro To Computer Security', 'instructors': [{'id': 9487, 'name': 'Daniel W. Barowy'}], 'meetings': [{'days': 'T', 'start': '14:30', 'end': '16:00', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': 'This Course Has Twice-Weekly Lecture Meetings As Well As A Weekly Lab Meeting.', 'classReqEval': 'Weekly reading responses, lab assignments, midterm exam, and final project', 'extraInfo': '', 'prereqs': 'CSCI 237', 'departmentNotes': '', 'descriptionSearch': 'This class explores common vulnerabilities in computer systems, how attackers exploit them, and how systems engineers design defenses to mitigate them. The goal is to be able to recognize potential vulnerabilities in one\'s own software and to practice defensive design. Hands-on experience writing assembly language and C code to inspect and modify the low-level operation of running programs is emphasized. Finally, regular reading and writing assignments round out the course to help students understand the cultural and historical background of the computer security "arms race."', 'enrolmentPreferences': 'Upper-level students', 'crossListing': ['CSCI 331'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010808', 'department': 'CSCI', 'number': 334, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 3879, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Unavailable', 'classType': 'Lecture', 'titleLong': 'Principles Of Programming Languages', 'titleShort': 'Principles Of Programming Lang', 'instructors': [{'id': 9487, 'name': 'Daniel W. Barowy'}], 'meetings': [{'days': 'TR', 'start': '09:55', 'end': '11:10', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Weekly problem sets and programming assignments, a midterm examination, and a final examination', 'extraInfo': '', 'prereqs': 'CSCI 136', 'departmentNotes': '', 'descriptionSearch': 'This course examines the concepts and structures governing the design and implementation of programming languages. It presents an introduction to the concepts behind compilers and run-time representations of programming languages; features of programming languages supporting abstraction and polymorphism; and the procedural, functional, object-oriented, and concurrent programming paradigms. Programs will be required in languages illustrating each of these paradigms.', 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 334'], 'components': ['Lecture']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010808', 'department': 'CSCI', 'number': 334, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 1203, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Unavailable', 'classType': 'Lecture', 'titleLong': 'Principles Of Programming Languages', 'titleShort': 'Principles Of Programming Lang', 'instructors': [{'id': 9487, 'name': 'Daniel W. Barowy'}], 'meetings': [{'days': 'MR', 'start': '13:10', 'end': '14:25', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': True, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Weekly problem sets and programming assignments, a midterm examination, and a final examination', 'extraInfo': '', 'prereqs': 'CSCI 136', 'departmentNotes': '', 'descriptionSearch': 'This course examines the concepts and structures governing the design and implementation of programming languages. It presents an introduction to the concepts behind compilers and run-time representations of programming languages; features of programming languages supporting abstraction and polymorphism; and the procedural, functional, object-oriented, and concurrent programming paradigms. Programs will be required in languages illustrating each of these paradigms.', 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 334'], 'components': ['Lecture']}
{'year': 2024, 'semester': 'Spring', 'courseID': '022328', 'department': 'CSCI', 'number': 345, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 3206, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Lecture', 'titleLong': 'Robotics And Digital Fabrication', 'titleShort': 'Robotics & Digital Fabrication', 'instructors': [{'id': 13530, 'name': 'James M. Bern'}], 'meetings': [{'days': 'TR', 'start': '09:55', 'end': '11:10', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Evaluation based on assignments, projects, and exams.', 'extraInfo': '', 'prereqs': 'CSCI 237', 'departmentNotes': '', 'descriptionSearch': 'This course is a hands-on exploration of topics in robotics and digital fabrication. We will experience firsthand how ideas and methods from computer science can be applied to make physical objects, including robots and other machines. The emphasis will be on creative, hands-on experimentation. Along the way, students will learn the basics of embedded systems programming (Arduino), breadboarding, soldering, printed circuit board (PCB) design, mechanical computer-aided design (CAD)--both conventional (OnShape) and programmatic (OpenSCAD)--as well digital fabrication (3D-printing, laser cutting). Students will learn both how to build their own prototypes and how to send out designs to have parts machined professionally. Students will work in teams throughout. The course will culminate in a team robotic design competition testing both functionality and creativity.', 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 345'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Spring', 'courseID': '022328', 'department': 'CSCI', 'number': 345, 'section': '02', 'sectionType': 'in-person', 'peoplesoftNumber': 3207, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Laboratory', 'titleLong': 'Robotics And Digital Fabrication', 'titleShort': 'Robotics & Digital Fabrication', 'instructors': [{'id': 13530, 'name': 'James M. Bern'}], 'meetings': [{'days': 'T', 'start': '13:00', 'end': '14:30', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Evaluation based on assignments, projects, and exams.', 'extraInfo': '', 'prereqs': 'CSCI 237', 'departmentNotes': '', 'descriptionSearch': 'This course is a hands-on exploration of topics in robotics and digital fabrication. We will experience firsthand how ideas and methods from computer science can be applied to make physical objects, including robots and other machines. The emphasis will be on creative, hands-on experimentation. Along the way, students will learn the basics of embedded systems programming (Arduino), breadboarding, soldering, printed circuit board (PCB) design, mechanical computer-aided design (CAD)--both conventional (OnShape) and programmatic (OpenSCAD)--as well digital fabrication (3D-printing, laser cutting). Students will learn both how to build their own prototypes and how to send out designs to have parts machined professionally. Students will work in teams throughout. The course will culminate in a team robotic design competition testing both functionality and creativity.', 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 345'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Spring', 'courseID': '022328', 'department': 'CSCI', 'number': 345, 'section': '03', 'sectionType': 'in-person', 'peoplesoftNumber': 3208, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Laboratory', 'titleLong': 'Robotics And Digital Fabrication', 'titleShort': 'Robotics & Digital Fabrication', 'instructors': [{'id': 13530, 'name': 'James M. Bern'}], 'meetings': [{'days': 'T', 'start': '14:30', 'end': '16:00', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Evaluation based on assignments, projects, and exams.', 'extraInfo': '', 'prereqs': 'CSCI 237', 'departmentNotes': '', 'descriptionSearch': 'This course is a hands-on exploration of topics in robotics and digital fabrication. We will experience firsthand how ideas and methods from computer science can be applied to make physical objects, including robots and other machines. The emphasis will be on creative, hands-on experimentation. Along the way, students will learn the basics of embedded systems programming (Arduino), breadboarding, soldering, printed circuit board (PCB) design, mechanical computer-aided design (CAD)--both conventional (OnShape) and programmatic (OpenSCAD)--as well digital fabrication (3D-printing, laser cutting). Students will learn both how to build their own prototypes and how to send out designs to have parts machined professionally. Students will work in teams throughout. The course will culminate in a team robotic design competition testing both functionality and creativity.', 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 345'], 'components': ['Lecture', 'Laboratory']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010814', 'department': 'CSCI', 'number': 361, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 3224, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Lecture', 'titleLong': 'Theory Of Computation', 'titleShort': 'Theory Of Computation', 'instructors': [{'id': 11181, 'name': 'Aaron M. Williams'}], 'meetings': [{'days': 'MR', 'start': '14:35', 'end': '15:50', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': 'Students Should Sign Up For Lecture And One Conference Section.', 'classReqEval': 'Online multiple choice and short answer questions, weekly problem sets in groups, a research project, and a final examination', 'extraInfo': '', 'prereqs': 'CSCI 256 or both a 300-level MATH course and permission of instructor', 'departmentNotes': '', 'descriptionSearch': 'This course introduces a formal framework for investigating both the computability and complexity of problems. We study several models of computation including finite automata, regular languages, context-free grammars, and Turing machines. These models provide a mathematical basis for the study of computability theory--the examination of what problems can be solved and what problems cannot be solved--and the study of complexity theory--the examination of how efficiently problems can be solved. Topics include the halting problem and the P versus NP problem.', 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 361', 'MATH 361'], 'components': ['Lecture', 'Conference']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010814', 'department': 'CSCI', 'number': 361, 'section': '02', 'sectionType': 'in-person', 'peoplesoftNumber': 3228, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Conference', 'titleLong': 'Theory Of Computation', 'titleShort': 'Theory Of Computation', 'instructors': [{'id': 11181, 'name': 'Aaron M. Williams'}], 'meetings': [{'days': 'W', 'start': '11:00', 'end': '12:00', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': 'Students Should Sign Up For Lecture And One Conference Section.', 'classReqEval': 'Online multiple choice and short answer questions, weekly problem sets in groups, a research project, and a final examination', 'extraInfo': '', 'prereqs': 'CSCI 256 or both a 300-level MATH course and permission of instructor', 'departmentNotes': '', 'descriptionSearch': 'This course introduces a formal framework for investigating both the computability and complexity of problems. We study several models of computation including finite automata, regular languages, context-free grammars, and Turing machines. These models provide a mathematical basis for the study of computability theory--the examination of what problems can be solved and what problems cannot be solved--and the study of complexity theory--the examination of how efficiently problems can be solved. Topics include the halting problem and the P versus NP problem.', 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 361', 'MATH 361'], 'components': ['Lecture', 'Conference']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010814', 'department': 'CSCI', 'number': 361, 'section': '03', 'sectionType': 'in-person', 'peoplesoftNumber': 3229, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Conference', 'titleLong': 'Theory Of Computation', 'titleShort': 'Theory Of Computation', 'instructors': [{'id': 11181, 'name': 'Aaron M. Williams'}], 'meetings': [{'days': 'W', 'start': '12:00', 'end': '13:00', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': 'Students Should Sign Up For Lecture And One Conference Section.', 'classReqEval': 'Online multiple choice and short answer questions, weekly problem sets in groups, a research project, and a final examination', 'extraInfo': '', 'prereqs': 'CSCI 256 or both a 300-level MATH course and permission of instructor', 'departmentNotes': '', 'descriptionSearch': 'This course introduces a formal framework for investigating both the computability and complexity of problems. We study several models of computation including finite automata, regular languages, context-free grammars, and Turing machines. These models provide a mathematical basis for the study of computability theory--the examination of what problems can be solved and what problems cannot be solved--and the study of complexity theory--the examination of how efficiently problems can be solved. Topics include the halting problem and the P versus NP problem.', 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 361', 'MATH 361'], 'components': ['Conference', 'Lecture']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010814', 'department': 'CSCI', 'number': 361, 'section': '04', 'sectionType': 'in-person', 'peoplesoftNumber': 3230, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Conference', 'titleLong': 'Theory Of Computation', 'titleShort': 'Theory Of Computation', 'instructors': [{'id': 11181, 'name': 'Aaron M. Williams'}], 'meetings': [{'days': 'W', 'start': '13:00', 'end': '14:00', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': 'Students Should Sign Up For Lecture And One Conference Section.', 'classReqEval': 'Online multiple choice and short answer questions, weekly problem sets in groups, a research project, and a final examination', 'extraInfo': '', 'prereqs': 'CSCI 256 or both a 300-level MATH course and permission of instructor', 'departmentNotes': '', 'descriptionSearch': 'This course introduces a formal framework for investigating both the computability and complexity of problems. We study several models of computation including finite automata, regular languages, context-free grammars, and Turing machines. These models provide a mathematical basis for the study of computability theory--the examination of what problems can be solved and what problems cannot be solved--and the study of complexity theory--the examination of how efficiently problems can be solved. Topics include the halting problem and the P versus NP problem.', 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 361', 'MATH 361'], 'components': ['Lecture', 'Conference']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010814', 'department': 'CSCI', 'number': 361, 'section': '05', 'sectionType': 'in-person', 'peoplesoftNumber': 3231, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Conference', 'titleLong': 'Theory Of Computation', 'titleShort': 'Theory Of Computation', 'instructors': [{'id': 11181, 'name': 'Aaron M. Williams'}], 'meetings': [{'days': 'W', 'start': '14:00', 'end': '15:00', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': 'Students Should Sign Up For Lecture And One Conference Section.', 'classReqEval': 'Online multiple choice and short answer questions, weekly problem sets in groups, a research project, and a final examination', 'extraInfo': '', 'prereqs': 'CSCI 256 or both a 300-level MATH course and permission of instructor', 'departmentNotes': '', 'descriptionSearch': 'This course introduces a formal framework for investigating both the computability and complexity of problems. We study several models of computation including finite automata, regular languages, context-free grammars, and Turing machines. These models provide a mathematical basis for the study of computability theory--the examination of what problems can be solved and what problems cannot be solved--and the study of complexity theory--the examination of how efficiently problems can be solved. Topics include the halting problem and the P versus NP problem.', 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 361', 'MATH 361'], 'components': ['Lecture', 'Conference']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010814', 'department': 'CSCI', 'number': 361, 'section': '06', 'sectionType': 'in-person', 'peoplesoftNumber': 3232, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Conference', 'titleLong': 'Theory Of Computation', 'titleShort': 'Theory Of Computation', 'instructors': [{'id': 11181, 'name': 'Aaron M. Williams'}], 'meetings': [{'days': 'W', 'start': '15:00', 'end': '16:00', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': 'Students Should Sign Up For Lecture And One Conference Section.', 'classReqEval': 'Online multiple choice and short answer questions, weekly problem sets in groups, a research project, and a final examination', 'extraInfo': '', 'prereqs': 'CSCI 256 or both a 300-level MATH course and permission of instructor', 'departmentNotes': '', 'descriptionSearch': 'This course introduces a formal framework for investigating both the computability and complexity of problems. We study several models of computation including finite automata, regular languages, context-free grammars, and Turing machines. These models provide a mathematical basis for the study of computability theory--the examination of what problems can be solved and what problems cannot be solved--and the study of complexity theory--the examination of how efficiently problems can be solved. Topics include the halting problem and the P versus NP problem.', 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 361', 'MATH 361'], 'components': ['Lecture', 'Conference']}
{'year': 2024, 'semester': 'Fall', 'courseID': '017427', 'department': 'CSCI', 'number': 374, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 1204, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Lecture', 'titleLong': 'Machine Learning', 'titleShort': 'Machine Learning', 'instructors': [{'id': 12780, 'name': 'Rohit Bhattacharya'}], 'meetings': [{'days': 'MR', 'start': '13:10', 'end': '14:25', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': "Presentations, problem sets, programming exercises, empirical analyses of algorithms, critical analysis of current literature; the final two weeks are focused on a project of the student's design.", 'extraInfo': '', 'prereqs': 'CSCI 136 and CSCI 256 or permission of instructor', 'departmentNotes': '', 'descriptionSearch': 'Machine learning is a field that derives from artificial intelligence and statistics, and is concerned with the design and analysis of computer algorithms that "learn" automatically through the use of data. Computer algorithms are capable of discerning subtle patterns and structure in the data that would be practically impossible for a human to find. As a result, real-world decisions, such as treatment options and loan approvals, are being increasingly automated based on predictions or factual knowledge derived from such algorithms. This course explores topics in supervised learning (e.g., random forests and neural networks), unsupervised learning (e.g., k-means clustering and expectation maximization), and possibly reinforcement learning (e.g., Q-learning and temporal difference learning.) It will also introduce methods for the evaluation of learning algorithms (with an emphasis on analysis of generalizability and robustness of the algorithms to distribution/environmental shift), as well as topics in computational learning theory and ethics.', 'enrolmentPreferences': 'Current or expected Computer Science majors.', 'crossListing': ['CSCI 374'], 'components': ['Lecture']}
{'year': 2024, 'semester': 'Fall', 'courseID': '017427', 'department': 'CSCI', 'number': 374, 'section': '02', 'sectionType': 'in-person', 'peoplesoftNumber': 1205, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Lecture', 'titleLong': 'Machine Learning', 'titleShort': 'Machine Learning', 'instructors': [{'id': 12780, 'name': 'Rohit Bhattacharya'}], 'meetings': [{'days': 'MR', 'start': '14:35', 'end': '15:50', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': "Presentations, problem sets, programming exercises, empirical analyses of algorithms, critical analysis of current literature; the final two weeks are focused on a project of the student's design.", 'extraInfo': '', 'prereqs': 'CSCI 136 and CSCI 256 or permission of instructor', 'departmentNotes': '', 'descriptionSearch': 'Machine learning is a field that derives from artificial intelligence and statistics, and is concerned with the design and analysis of computer algorithms that "learn" automatically through the use of data. Computer algorithms are capable of discerning subtle patterns and structure in the data that would be practically impossible for a human to find. As a result, real-world decisions, such as treatment options and loan approvals, are being increasingly automated based on predictions or factual knowledge derived from such algorithms. This course explores topics in supervised learning (e.g., random forests and neural networks), unsupervised learning (e.g., k-means clustering and expectation maximization), and possibly reinforcement learning (e.g., Q-learning and temporal difference learning.) It will also introduce methods for the evaluation of learning algorithms (with an emphasis on analysis of generalizability and robustness of the algorithms to distribution/environmental shift), as well as topics in computational learning theory and ethics.', 'enrolmentPreferences': 'Current or expected Computer Science majors.', 'crossListing': ['CSCI 374'], 'components': ['Lecture']}
{'year': 2024, 'semester': 'Spring', 'courseID': '021759', 'department': 'CSCI', 'number': 378, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 3241, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Unavailable', 'classType': 'Lecture', 'titleLong': 'Human Artificial Intelligence Interaction', 'titleShort': 'Human-AI Interaction', 'instructors': [{'id': 9479, 'name': 'Iris Howley'}], 'meetings': [{'days': 'TF', 'start': '13:10', 'end': '14:25', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': False, 'wac': False, 'passFail': True, 'fifthCourse': False}, 'classFormat': 'Lecture Content Is Delivered Via Video, And In-Class Time Will Be Spent Doing Hands-On Activities Or In Group Discussion.', 'classReqEval': 'Homework, programming assignments, group work, participation, and quizzes', 'extraInfo': '', 'prereqs': 'CSCI 136, and at least one of CSCI 237, 256, or 334', 'departmentNotes': '', 'descriptionSearch': 'Artificial intelligence (AI) is already transforming society and every industry today. In order to ensure that AI serves the collective needs of humanity, we as computer scientists must guide AI so that it has a positive impact on the human experience. This course is an introduction to harnessing the power of AI so that it benefits people and communities. We will cover a number of general topics such as: agency and initiative, AI and ethics, bias and transparency, confidence and errors, human augmentation and amplification, trust and explainability, and mixed-initiative systems. We explore these topics via readings and projects across the AI spectrum, including: dialog and speech-controlled systems, computer vision, data science, recommender systems, text summarization, and UI personalization, among others.', 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 378', 'STS 378'], 'components': ['Lecture']}
{'year': 2024, 'semester': 'Spring', 'courseID': '021861', 'department': 'CSCI', 'number': 379, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 3243, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Lecture', 'titleLong': 'Causal Inference', 'titleShort': 'Causal Inference', 'instructors': [{'id': 12780, 'name': 'Rohit Bhattacharya'}], 'meetings': [{'days': 'MR', 'start': '13:10', 'end': '14:25', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Problem sets, programming exercises, empirical analyses, case studies, and a final project.', 'extraInfo': '', 'prereqs': 'CSCI 136, and either CSCI 256 or STAT 201/202.', 'departmentNotes': '', 'descriptionSearch': 'Does X cause Y? If so, how? And what is the strength of this causal relation? Seeking answers to such causal (as opposed to associational) questions is a fundamental human endeavor; the answers we find can be used to support decision-making in various settings such as healthcare and public policy. But how does one tease apart causation from association--early in our statistical education we are taught that "correlation does not imply causation." In this course, we will re-examine this phrase and learn how to reason with confidence about the validity of causal conclusions drawn from messy real-world data. We will cover core topics in causal inference including causal graphical models, unsupervised learning of the structure of these models, expression of causal quantities as functions of observed data, and robust/efficient estimation of these quantities using statistical and machine learning methods. Concepts in the course will be contextualized via regular case studies.', 'enrolmentPreferences': 'Computer science majors and prospective majors.', 'crossListing': ['CSCI 379'], 'components': ['Lecture']}
{'year': 2024, 'semester': 'Spring', 'courseID': '022329', 'department': 'CSCI', 'number': 381, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 3244, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Lecture', 'titleLong': 'Deep Learning', 'titleShort': 'Deep Learning', 'instructors': [{'id': 13529, 'name': 'Mark Hopkins'}], 'meetings': [{'days': 'MWF', 'start': '11:00', 'end': '11:50', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Evaluation based on assignments, projects, and exams.', 'extraInfo': '', 'prereqs': 'CSCI 136 and fulfillment of the Discrete Mathematics Proficiency requirement', 'departmentNotes': '', 'descriptionSearch': 'This course is an introduction to deep neural networks and how to train them. Beginning with the fundamentals of regression and optimization, the course then surveys a variety of neural network architectures, which may include multilayer feedforward neural networks, convolutional neural networks, recurrent neural networks, and transformer networks. Students will also learn how to use deep learning software such as PyTorch or Tensorflow.', 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 381'], 'components': ['Lecture']}
{'year': 2024, 'semester': 'Spring', 'courseID': '022329', 'department': 'CSCI', 'number': 381, 'section': '02', 'sectionType': 'in-person', 'peoplesoftNumber': 3932, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Lecture', 'titleLong': 'Deep Learning', 'titleShort': 'Deep Learning', 'instructors': [{'id': 13529, 'name': 'Mark Hopkins'}], 'meetings': [{'days': 'MWF', 'start': '12:00', 'end': '12:50', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Evaluation based on assignments, projects, and exams.', 'extraInfo': '', 'prereqs': 'CSCI 136 and fulfillment of the Discrete Mathematics Proficiency requirement', 'departmentNotes': '', 'descriptionSearch': 'This course is an introduction to deep neural networks and how to train them. Beginning with the fundamentals of regression and optimization, the course then surveys a variety of neural network architectures, which may include multilayer feedforward neural networks, convolutional neural networks, recurrent neural networks, and transformer networks. Students will also learn how to use deep learning software such as PyTorch or Tensorflow.', 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 381'], 'components': ['Lecture']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010819', 'department': 'CSCI', 'number': 397, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 1207, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Independent Study', 'titleLong': 'Independent Reading: Computer Science', 'titleShort': 'Ind Reading: Computer Science', 'instructors': [{'id': 2682, 'name': 'Jeannie R Albrecht'}], 'meetings': None, 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': False, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'To be determined by supervising faculty member.', 'extraInfo': '', 'prereqs': 'Permission of department', 'departmentNotes': '', 'descriptionSearch': 'Directed independent reading in Computer Science.', 'enrolmentPreferences': 'None', 'crossListing': ['CSCI 397'], 'components': ['Independent Study']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010820', 'department': 'CSCI', 'number': 398, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 3245, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Independent Study', 'titleLong': 'Independent Reading: Computer Science', 'titleShort': 'Ind Reading: Computer Science', 'instructors': [{'id': 2682, 'name': 'Jeannie R Albrecht'}], 'meetings': None, 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': False, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'To be determined by supervising faculty member.', 'extraInfo': '', 'prereqs': 'Permission of department', 'departmentNotes': '', 'descriptionSearch': 'Directed independent reading in Computer Science.', 'enrolmentPreferences': 'None', 'crossListing': ['CSCI 398'], 'components': ['Independent Study']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010821', 'department': 'CSCI', 'number': 432, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 1206, 'consent': 'N', 'gradingBasisDesc': 'No Pass/Fail and No Fifth Course', 'classType': 'Lecture', 'titleLong': 'Operating Systems', 'titleShort': 'Operating Systems', 'instructors': [{'id': 2682, 'name': 'Jeannie R Albrecht'}], 'meetings': [{'days': 'TR', 'start': '09:55', 'end': '11:10', 'facility': ''}], 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': True, 'wac': False, 'passFail': False, 'fifthCourse': False}, 'classFormat': '', 'classReqEval': 'Several implementation projects that will include significant programming, as well as written homework, and up to two exams', 'extraInfo': '', 'prereqs': 'CSCI 237 and either CSCI 256 or 334', 'departmentNotes': '', 'descriptionSearch': 'This course explores the design and implementation of computer operating systems. Topics include historical aspects of operating systems development, systems programming, process scheduling, synchronization of concurrent processes, virtual machines, memory management and virtual memory, I/O and file systems, system security, os/architecture interaction, and distributed operating systems.', 'enrolmentPreferences': 'Current or expected Computer Science majors', 'crossListing': ['CSCI 432'], 'components': ['Lecture']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010824', 'department': 'CSCI', 'number': 493, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 1209, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Honors', 'titleLong': 'Research In Computer Science', 'titleShort': 'Research In Computer Science', 'instructors': [{'id': 2682, 'name': 'Jeannie R Albrecht'}], 'meetings': None, 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': False, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'Class participation, presentations, and the final written report', 'extraInfo': '', 'prereqs': 'None', 'departmentNotes': 'This course (along with CSCI 31 and CSCI 494) is required for students pursuing honors, but enrollment is not limited to students pursuing honors', 'descriptionSearch': 'This course provides highly-motivated students an opportunity to work independently with faculty on research topics chosen by individual faculty. Students are generally expected to perform a literature review, identify areas of potential contribution, and explore extensions to existing results. The course culminates in a concise, well-written report describing a problem, its background history, any independent results achieved, and directions for future research.', 'enrolmentPreferences': 'Open to senior Computer Science majors with permission of instructor', 'crossListing': ['CSCI 493'], 'components': ['Honors']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010825', 'department': 'CSCI', 'number': 494, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 3247, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Honors', 'titleLong': 'Senior Thesis: Computer Science', 'titleShort': 'Senior Thesis:Computer Science', 'instructors': [{'id': 2682, 'name': 'Jeannie R Albrecht'}], 'meetings': None, 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': False, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'Class participation, presentations, and the final written report', 'extraInfo': '', 'prereqs': 'CSCI 493', 'departmentNotes': '', 'descriptionSearch': 'Computer Science thesis; this is part of a full-year thesis (493-494).', 'enrolmentPreferences': 'Open to senior Computer Science majors with permission of instructor', 'crossListing': ['CSCI 494'], 'components': ['Honors']}
{'year': 2024, 'semester': 'Fall', 'courseID': '010826', 'department': 'CSCI', 'number': 497, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 1208, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Independent Study', 'titleLong': 'Independent Reading: Computer Science', 'titleShort': 'Ind Reading: Computer Science', 'instructors': [{'id': 2682, 'name': 'Jeannie R Albrecht'}], 'meetings': None, 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': False, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'To be determined by supervising faculty member.', 'extraInfo': '', 'prereqs': 'Permission of department', 'departmentNotes': '', 'descriptionSearch': 'Directed independent reading in Computer Science.', 'enrolmentPreferences': 'None', 'crossListing': ['CSCI 497'], 'components': ['Independent Study']}
{'year': 2024, 'semester': 'Spring', 'courseID': '010827', 'department': 'CSCI', 'number': 498, 'section': '01', 'sectionType': 'in-person', 'peoplesoftNumber': 3246, 'consent': 'N', 'gradingBasisDesc': 'Pass/Fail Available, Fifth Course Available', 'classType': 'Independent Study', 'titleLong': 'Independent Reading: Computer Science', 'titleShort': 'Ind Reading: Computer Science', 'instructors': [{'id': 2682, 'name': 'Jeannie R Albrecht'}], 'meetings': None, 'courseAttributes': {'div1': False, 'div2': False, 'div3': True, 'dpe': False, 'qfr': False, 'wac': False, 'passFail': True, 'fifthCourse': True}, 'classFormat': '', 'classReqEval': 'To be determined by supervising faculty member.', 'extraInfo': '', 'prereqs': 'Permission of department', 'departmentNotes': '', 'descriptionSearch': 'Directed independent reading in Computer Science.', 'enrolmentPreferences': 'None', 'crossListing': ['CSCI 498'], 'components': ['Independent Study']}
